#!/bin/bash

# Test para cambio de contrase√±a de administrador

echo "üîê Probando funcionalidad de cambio de contrase√±a de administrador"

# 1. Login como administrador
echo "1. üîë Login como administrador..."
ADMIN_LOGIN=$(curl -s -X POST http://localhost:3000/api/auth/login \
  -H "Content-Type: application/json" \
  -d '{"email": "admin@test.com", "password": "admin123"}')

echo "Respuesta login admin: $ADMIN_LOGIN"

ADMIN_TOKEN=$(echo $ADMIN_LOGIN | jq -r '.data.token // empty')

if [ -z "$ADMIN_TOKEN" ]; then
  echo "‚ùå Error: No se pudo obtener token de admin"
  exit 1
fi

echo "‚úÖ Token de admin obtenido correctamente"

# 2. Obtener lista de usuarios para encontrar el ID del investigador
echo "2. üë• Obteniendo lista de usuarios..."
USERS_RESPONSE=$(curl -s -H "Authorization: Bearer $ADMIN_TOKEN" \
  http://localhost:3000/api/admin/users?limit=10)

echo "Usuarios encontrados:"
echo $USERS_RESPONSE | jq '.data.users[] | {id: .id, email: .email, full_name: .full_name, role: .role}'

# Buscar el ID del investigador
INVESTIGATOR_ID=$(echo $USERS_RESPONSE | jq -r '.data.users[] | select(.email == "investigador.test@choco.gov.co") | .id // empty')

if [ -z "$INVESTIGATOR_ID" ]; then
  echo "‚ùå Error: No se encontr√≥ el usuario investigador.test@choco.gov.co"
  exit 1
fi

echo "‚úÖ Investigador encontrado con ID: $INVESTIGATOR_ID"

# 3. Cambiar contrase√±a del investigador
echo "3. üîß Cambiando contrase√±a del investigador..."
PASSWORD_CHANGE_RESPONSE=$(curl -s -X PUT \
  -H "Authorization: Bearer $ADMIN_TOKEN" \
  -H "Content-Type: application/json" \
  -d '{"new_password": "NuevaPassword2024!"}' \
  http://localhost:3000/api/admin/users/$INVESTIGATOR_ID/password)

echo "Respuesta cambio de contrase√±a: $PASSWORD_CHANGE_RESPONSE"

# Verificar si fue exitoso
SUCCESS=$(echo $PASSWORD_CHANGE_RESPONSE | jq -r '.success // false')

if [ "$SUCCESS" = "true" ]; then
  echo "‚úÖ Contrase√±a cambiada exitosamente"
  
  # 4. Probar login con nueva contrase√±a
  echo "4. üß™ Probando login con nueva contrase√±a..."
  NEW_LOGIN=$(curl -s -X POST http://localhost:3000/api/auth/login \
    -H "Content-Type: application/json" \
    -d '{"email": "investigador.test@choco.gov.co", "password": "NuevaPassword2024!"}')
  
  echo "Login con nueva contrase√±a: $NEW_LOGIN"
  
  NEW_SUCCESS=$(echo $NEW_LOGIN | jq -r '.success // false')
  
  if [ "$NEW_SUCCESS" = "true" ]; then
    echo "‚úÖ Login con nueva contrase√±a exitoso"
    
    # 5. Restaurar contrase√±a original
    echo "5. üîÑ Restaurando contrase√±a original..."
    RESTORE_RESPONSE=$(curl -s -X PUT \
      -H "Authorization: Bearer $ADMIN_TOKEN" \
      -H "Content-Type: application/json" \
      -d '{"new_password": "ChocoCTeI2024"}' \
      http://localhost:3000/api/admin/users/$INVESTIGATOR_ID/password)
    
    echo "Restauraci√≥n: $RESTORE_RESPONSE"
    
    RESTORE_SUCCESS=$(echo $RESTORE_RESPONSE | jq -r '.success // false')
    
    if [ "$RESTORE_SUCCESS" = "true" ]; then
      echo "‚úÖ Contrase√±a original restaurada"
      
      # 6. Verificar login con contrase√±a original
      echo "6. ‚úîÔ∏è Verificando login con contrase√±a original..."
      ORIGINAL_LOGIN=$(curl -s -X POST http://localhost:3000/api/auth/login \
        -H "Content-Type: application/json" \
        -d '{"email": "investigador.test@choco.gov.co", "password": "ChocoCTeI2024"}')
      
      ORIGINAL_SUCCESS=$(echo $ORIGINAL_LOGIN | jq -r '.success // false')
      
      if [ "$ORIGINAL_SUCCESS" = "true" ]; then
        echo "‚úÖ ¬°TODAS LAS PRUEBAS EXITOSAS!"
        echo "üéâ Funcionalidad de cambio de contrase√±a funcionando correctamente"
        exit 0
      else
        echo "‚ùå Error: No se pudo hacer login con contrase√±a original"
        exit 1
      fi
    else
      echo "‚ùå Error restaurando contrase√±a original"
      exit 1
    fi
  else
    echo "‚ùå Error: No se pudo hacer login con nueva contrase√±a"
    exit 1
  fi
else
  echo "‚ùå Error cambiando contrase√±a"
  exit 1
fi